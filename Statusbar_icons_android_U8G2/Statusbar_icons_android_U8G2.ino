/*  Statusbar_icons_android_U8G2
**  Copyright (c) 2021 JDJ-ELECTRONICS
**
**  TERMS OF USE: MIT License. See bottom of file.                                                            
***************************************************************************      
  Arduino-IDE settings for AVR128DB32:

    - Chip: "AVR128DB32"
    - Clock Speed: "24MHz internal"
    - millis()/micros() timer: "TCB2 (recomended)"
    - BOD level if enabled (Bootload burn req'd): "1.9V"
    - BOD Mode Active/Sleeping (Bootload burn req'd): "Disabled/Disabled"
    - Save EEPROM (Bootload burn req'd): "EEPROM retained"
    - Reset pin function (Bootload burn req'd): "Hardware Reset (recomended)"
    - Startup Time (Bootload burn req'd): "8ms"
    - Flash writing: "Disabled"
    - Attachinterrupt() Version: "On all pins, like usual"
    - Port: <select correct port>
    - Programmer:"jtag2updi"

    ==================================
    ==> DxCore version 1.3.8 <==
    ==================================

    Pinwap i2c = SDA1, SCL1
*/

#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

  
 
U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL1, /* data=*/ SDA1, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display
//U8G2_SH1106_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL1, /* data=*/ SDA1, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display





//---SIGNAL icons--- 13 by 16 pixels
const unsigned char noSignal[] U8X8_PROGMEM = { //13x16
0x00, 0x08, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0x09, 0x80, 0x08, 0x40, 0x08,
0x20, 0x08, 0x10, 0x08, 0x08, 0x08, 0x04, 0x08, 0x02, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_20[] U8X8_PROGMEM = { //13x16
0x00, 0x08, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0x09, 0x80, 0x08, 0x40, 0x08,
0x20, 0x08, 0x10, 0x08, 0x08, 0x08, 0x0c, 0x08, 0x0e, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_50[] U8X8_PROGMEM = { //13x16
0x00, 0x08, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0x09, 0x80, 0x08, 0x40, 0x08,
0x60, 0x08, 0x70, 0x08, 0x78, 0x08, 0x7c, 0x08, 0x7e, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


const unsigned char signal_80[] U8X8_PROGMEM = {
0x00, 0x08, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0x09, 0x80, 0x09, 0xc0, 0x09,
0xe0, 0x09, 0xf0, 0x09, 0xf8, 0x09, 0xfc, 0x09, 0xfe, 0x09, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_100[] U8X8_PROGMEM = {
0x00, 0x08, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0x0f, 0x80, 0x0f, 0xc0, 0x0f,
0xe0, 0x0f, 0xf0, 0x0f, 0xf8, 0x0f, 0xfc, 0x0f, 0xfe, 0x0f, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


//=============================================================================

//---Signal ROAMING icons--- 13 by 16 pixels
const unsigned char noSignal_X[] U8X8_PROGMEM = {
0x11, 0x08, 0x0a, 0x0c, 0x04, 0x0a, 0x0a, 0x09, 0x91, 0x08, 0x40, 0x08,
0x20, 0x08, 0x10, 0x08, 0x08, 0x08, 0x04, 0x08, 0x02, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_20_R[] U8X8_PROGMEM = {
0x0f, 0x08, 0x09, 0x0c, 0x0d, 0x0a, 0x03, 0x09, 0x85, 0x08, 0x49, 0x08,
0x20, 0x08, 0x10, 0x08, 0x08, 0x08, 0x0c, 0x08, 0x0e, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_50_R[] U8X8_PROGMEM = {
0x0f, 0x08, 0x09, 0x0c, 0x0d, 0x0a, 0x03, 0x09, 0x85, 0x08, 0x49, 0x08,
0x60, 0x08, 0x70, 0x08, 0x78, 0x08, 0x7c, 0x08, 0x7e, 0x08, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_80_R[] U8X8_PROGMEM = {
0x0f, 0x08, 0x09, 0x0c, 0x0d, 0x0a, 0x03, 0x09, 0x85, 0x09, 0xc9, 0x09,
0xe0, 0x09, 0xf0, 0x09, 0xf8, 0x09, 0xfc, 0x09, 0xfe, 0x09, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char signal_100_R[] U8X8_PROGMEM = {
0x0f, 0x08, 0x09, 0x0c, 0x0d, 0x0e, 0x03, 0x0f, 0x85, 0x0f, 0xc9, 0x0f,
0xe0, 0x0f, 0xf0, 0x0f, 0xf8, 0x0f, 0xfc, 0x0f, 0xfe, 0x0f, 0xff, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//=============================================================================

//---Battery icons--- 19 by 12 pixels
const unsigned char battery_Broken[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0xc0, 0x18, 0x00, 0x40, 0x15, 0x00, 0x40, 0x12, 0x00, 0x40, 0x15, 0x00,
0xc0, 0x18, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_Charging[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x18, 0x00, 0x40, 0x12, 0x00,
0x40, 0x17, 0x00, 0x40, 0x12, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x17, 0x00, 0x40, 0x10, 0x00, 0xc0, 0x18, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_0[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_20[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x10, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_50[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0x40, 0x10, 0x00, 0x40, 0x10, 0x00,
0x40, 0x10, 0x00, 0x40, 0x10, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00,
0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_80[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0x40, 0x10, 0x00, 0xc0, 0x1f, 0x00,
0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00,
0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00 };

const unsigned char battery_100[] U8X8_PROGMEM = {
0x00, 0x07, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00,
0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00,
0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00, 0xc0, 0x1f, 0x00 };

//=============================================================================

//---WIFI icons--- 19 by 16 pixels
const unsigned char wifi_0[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x20, 0x20, 0x00, 0x10, 0x40, 0x00,
0x08, 0x80, 0x00, 0x04, 0x00, 0x01, 0x04, 0x00, 0x01, 0x08, 0x80, 0x00,
0x10, 0x40, 0x00, 0x20, 0x20, 0x00, 0x40, 0x10, 0x00, 0x80, 0x08, 0x00,
0x00, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char wifi_20[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x20, 0x20, 0x00, 0x10, 0x40, 0x00,
0x08, 0x80, 0x00, 0x04, 0x00, 0x01, 0x04, 0x00, 0x01, 0x08, 0x80, 0x00,
0x10, 0x40, 0x00, 0x20, 0x20, 0x00, 0xc0, 0x1f, 0x00, 0x80, 0x0f, 0x00,
0x00, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char wifi_50[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x20, 0x20, 0x00, 0x10, 0x40, 0x00,
0x08, 0x80, 0x00, 0x04, 0x00, 0x01, 0xfc, 0xff, 0x01, 0xf8, 0xff, 0x00,
0xf0, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0xc0, 0x1f, 0x00, 0x80, 0x0f, 0x00,
0x00, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char wifi_80[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x20, 0x20, 0x00, 0xf0, 0x7f, 0x00,
0xf8, 0xff, 0x00, 0xfc, 0xff, 0x01, 0xfc, 0xff, 0x01, 0xf8, 0xff, 0x00,
0xf0, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0xc0, 0x1f, 0x00, 0x80, 0x0f, 0x00,
0x00, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

const unsigned char wifi_100[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0xe0, 0x3f, 0x00, 0xf0, 0x7f, 0x00,
0xf8, 0xff, 0x00, 0xfc, 0xff, 0x01, 0xfc, 0xff, 0x01, 0xf8, 0xff, 0x00,
0xf0, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0xc0, 0x1f, 0x00, 0x80, 0x0f, 0x00,
0x00, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//=============================================================================


//---GPS icon--- 16 by 15 pixels
const unsigned char NAV[] U8X8_PROGMEM = {
0x00, 0x00, 0x00, 0x20, 0x00, 0x38, 0x00, 0x1e, 0x80, 0x1f, 0xe0, 0x0f,
0xf8, 0x0f, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x00, 0x03, 0x00, 0x01,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//=============================================================================


void setup(void) {

  u8g2.begin();  
}

void loop(void) {
  u8g2.firstPage();
  do {
u8g2.drawXBMP(0, 0,  19, 12, battery_Broken);
u8g2.drawXBMP(18, 0,  19, 12, battery_Charging);
u8g2.drawXBMP(36, 0,  19, 12, battery_0);
u8g2.drawXBMP(54, 0,  19, 12, battery_20);
u8g2.drawXBMP(72, 0,  19, 12, battery_50);
u8g2.drawXBMP(90, 0,  19, 12, battery_80);
u8g2.drawXBMP(108, 0,  19, 12, battery_100);

u8g2.drawXBMP(0, 20,  13, 16, noSignal);
u8g2.drawXBMP(18, 20,  13, 16, signal_20);
u8g2.drawXBMP(36, 20,  13, 16, signal_50);
u8g2.drawXBMP(54, 20,  13, 16, signal_80);
u8g2.drawXBMP(73, 20,  13, 16, signal_100);

u8g2.drawXBMP(0, 40,  13, 16, noSignal_X);
u8g2.drawXBMP(18, 40,  13, 16, signal_20_R);
u8g2.drawXBMP(36, 40,  13, 16, signal_50_R);
u8g2.drawXBMP(54, 40,  13, 16, signal_80_R);
u8g2.drawXBMP(73, 40,  13, 16, signal_100_R);

u8g2.drawXBMP(90, 40,  19, 16, wifi_0);
u8g2.drawXBMP(108, 40,  19, 16, wifi_20);
u8g2.drawXBMP(90, 20,  19, 16, wifi_50);
u8g2.drawXBMP(108, 20,  19, 16, wifi_100);
  } while ( u8g2.nextPage() );
  //delay(1000);
}


/***************************************************************************
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to permit
* persons to whom the Software is furnished to do so, subject to the
* following conditions:
*
* The above copyright notice and this permission notice shall be included
* in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
* OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
* THE USE OR OTHER DEALINGS IN THE SOFTWARE.
* 
****************************************************************************
*/
