/*  JDJelectronics_logo_bitmaps
**  Copyright (c) 2023 JDJ-ELECTRONICS
**
**  TERMS OF USE: MIT License. See bottom of file.                                                            
***************************************************************************      
  Arduino-IDE settings for AVR128DB32:

    - Chip: "AVR128DB32"
    - Clock Speed: "24MHz internal"
    - millis()/micros() timer: "TCB2 (recomended)"
    - BOD level if enabled (Bootload burn req'd): "1.9V"
    - BOD Mode Active/Sleeping (Bootload burn req'd): "Disabled/Disabled"
    - Save EEPROM (Bootload burn req'd): "EEPROM retained"
    - Reset pin function (Bootload burn req'd): "Hardware Reset (recomended)"
    - Startup Time (Bootload burn req'd): "8ms"
    - Flash writing: "Disabled"
    - Attachinterrupt() Version: "On all pins, like usual"
    - Port: <select correct port>
    - Programmer:"jtag2updi"

    ==================================
    ==> DxCore version 1.3.8 <==
    ==================================

    Pinwap i2c = SDA1, SCL1
*/

#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

//--OLED 0.91 INCH
U8G2_SSD1306_128X32_UNIVISION_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);      // All Boards without Reset of the Display 
//U8G2_SSD1306_128X32_UNIVISION_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL1, /* data=*/ SDA1, /* reset=*/ U8X8_PIN_NONE);  // AVR128DB XX Series

//--OLED 0.96 INCH 
//U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);     // All Boards without Reset of the Display 
//U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL1, /* data=*/ SDA1, /* reset=*/ U8X8_PIN_NONE);   // AVR128DB XX Series

//--OLED 1.3 INCH
//U8G2_SH1106_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);      //All Boards without Reset of the Display 
//U8G2_SH1106_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL1, /* data=*/ SDA1, /* reset=*/ U8X8_PIN_NONE);    // AVR128DB XX Series


uint32_t draw_Interval;


//2015=========================================================================

//---JDJ Chip 2015_32 --- 32 by 32 pixels
const unsigned char JDJ_Chip32[] U8X8_PROGMEM = {
0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x01,
0xe0, 0xff, 0xff, 0x03, 0xf0, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff, 0x04,
0xff, 0xff, 0x7f, 0x7e, 0xf0, 0xff, 0x7f, 0x06, 0xf0, 0xff, 0x7f, 0x07,
0xf0, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0x7f, 0xf0, 0x17, 0x9c, 0x07,
0xf0, 0xd3, 0x9c, 0x07, 0xf0, 0xd3, 0xdc, 0x07, 0xf0, 0x18, 0xcc, 0x07,
0x3f, 0x08, 0xe4, 0x7f, 0xf0, 0xff, 0xff, 0x07, 0xf0, 0xfe, 0xff, 0x07,
0x70, 0xfe, 0xff, 0x07, 0x7f, 0xfe, 0xff, 0x7f, 0x70, 0xff, 0xff, 0x07,
0xf0, 0xff, 0xff, 0x07, 0xe0, 0xff, 0xff, 0x03, 0xc0, 0xff, 0xff, 0x01,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x44, 0x00,
0x00, 0x22, 0x44, 0x00, 0x00, 0x22, 0x44, 0x00 };

//---JDJ chip 2015_64 --- 64 by 64 pixels
const unsigned char JDJ_Chip64[] U8X8_PROGMEM = {
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3,
0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3, 0xc7, 0xc7, 0xff, 0xff,
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3,
0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3, 0xc7, 0xc7, 0xff, 0xff,
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,
0x00, 0x00, 0xfe, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff,
0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x07, 0x00, 0x00,
0x00, 0x00, 0xe0, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x01, 0x00, 0x00,
0x00, 0x00, 0xc7, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x83, 0x01,
0x80, 0x01, 0x00, 0x00, 0x00, 0x80, 0x83, 0x01, 0x80, 0x01, 0x00, 0x00,
0x00, 0x80, 0x83, 0x01, 0xff, 0x01, 0x00, 0x00, 0x00, 0x80, 0x83, 0xff,
0xff, 0x01, 0x00, 0x00, 0x00, 0x80, 0x81, 0xff, 0xff, 0x01, 0x00, 0x00,
0x00, 0x80, 0x80, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x00, 0x00,
0x00, 0x00, 0x80, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,
0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0xc0, 0xf8,
0x07, 0x18, 0x80, 0x01, 0xff, 0x01, 0xc0, 0xfc, 0x07, 0x18, 0x80, 0xff,
0xff, 0x01, 0xc0, 0x0c, 0x06, 0x18, 0x80, 0xff, 0xff, 0x01, 0x60, 0x0c,
0x06, 0x0c, 0x80, 0xff, 0xff, 0x01, 0x60, 0x06, 0x03, 0x0c, 0x80, 0xff,
0xff, 0x01, 0x60, 0x06, 0x03, 0x0c, 0x80, 0xff, 0xff, 0x01, 0x30, 0x86,
0x03, 0x06, 0x80, 0xff, 0x80, 0xc1, 0x3f, 0xff, 0xfd, 0x07, 0x80, 0x01,
0x80, 0xe1, 0x1f, 0xff, 0xfd, 0x03, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00,
0x00, 0x00, 0x80, 0x01, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x07, 0x00,
0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x03, 0x00, 0x00, 0x00, 0x80, 0xff,
0xff, 0x81, 0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x81, 0x03, 0x00,
0x00, 0x00, 0x80, 0xff, 0x80, 0x81, 0x01, 0x00, 0x00, 0x00, 0x80, 0x01,
0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00,
0x00, 0x00, 0x80, 0x01, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff,
0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x03, 0x00, 0x00,
0x00, 0x00, 0xe0, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff,
0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x1f, 0x00, 0x00,
0x00, 0x00, 0xf8, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff,
0xff, 0xff, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3,
0xc7, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0xff,
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3,
0xc7, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0xff,
0xff, 0xff, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0xff };

//2023=========================================================================

 //---JDJ small 2023_64 --- 64 by 64 pixels
const unsigned char JDJ_64[] U8X8_PROGMEM = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff,
0x7f, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff,
0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
0x3f, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x80, 0xff,
0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
0x3f, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0xe0, 0xff,
0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff,
0x1f, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0xf0, 0xff,
0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff,
0x0f, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0xfc, 0xff,
0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff,
0x07, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0xfe, 0xff,
0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0xc0, 0xe3, 0xff, 0x07, 0x00, 0x8f,
0x01, 0x00, 0xc0, 0xf3, 0xff, 0x07, 0x00, 0x8f, 0x01, 0x00, 0xc0, 0xf1,
0xff, 0x03, 0x00, 0x87, 0x01, 0x00, 0xe0, 0xf1, 0xc0, 0x03, 0x80, 0x87,
0x01, 0x00, 0xe0, 0x71, 0x80, 0x03, 0x80, 0xc7, 0x01, 0x00, 0xe0, 0x78,
0xc0, 0x03, 0x80, 0xc3, 0x03, 0x00, 0xe0, 0x78, 0xc0, 0x03, 0x80, 0xc3,
0x7f, 0x00, 0xf0, 0x38, 0xc0, 0x01, 0xc0, 0xe3, 0x3f, 0x00, 0xf0, 0x38,
0xc0, 0x01, 0xc0, 0xe1, 0x3f, 0x00, 0x70, 0x3c, 0xe0, 0x01, 0xc0, 0xe1,
0x3f, 0x00, 0x78, 0x1c, 0xe0, 0x00, 0xe0, 0xe1, 0x1f, 0x00, 0x7c, 0x3c,
0xf0, 0x00, 0xf0, 0xf1, 0x1f, 0xfe, 0x3f, 0xfe, 0xff, 0xf8, 0xff, 0xf0,
0x1f, 0xfe, 0x3f, 0xfe, 0x7f, 0xf8, 0xff, 0xf0, 0x0f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xf8, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8,
0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x0f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xfe, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };


   
//---JDJ small 2023_32-- 32 by 32 pixels
const unsigned char JDJ_32[] U8X8_PROGMEM = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff, 0x07, 0xf0, 0xff, 0xff,
0x07, 0xf8, 0xff, 0xff, 0x07, 0xf8, 0xff, 0xff, 0x03, 0xfc, 0xff, 0xff,
0x03, 0xfc, 0xff, 0xff, 0x03, 0xfe, 0xff, 0xff, 0x01, 0xfe, 0xff, 0xff,
0x01, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x80, 0x01, 0xd8, 0x0f, 0xb0,
0x00, 0xc8, 0x1f, 0x90, 0x00, 0x4c, 0x18, 0x98, 0x01, 0x6c, 0x18, 0x98,
0x07, 0x6c, 0x08, 0xc8, 0x07, 0x26, 0x0c, 0xcc, 0xf3, 0xf7, 0xef, 0xcf,
0x03, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xe0, 0xf1, 0xff, 0xff, 0xff,
0xf1, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };



//---JDJ JDJELECTRONICS 2023_Inverted--- 128 by 24 pixels
const unsigned char JDJelectronics_Inverted[] U8X8_PROGMEM = {
0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x23, 0xe0, 0xcf,
0x1f, 0x20, 0x3f, 0x40, 0x40, 0x80, 0x00, 0x01, 0x02, 0x24, 0x20, 0xc0,
0xff, 0x13, 0xe7, 0xe7, 0x9f, 0x23, 0x3f, 0x47, 0xfe, 0xf3, 0xfc, 0x39,
0x72, 0x24, 0x3f, 0xff, 0xff, 0x93, 0xe7, 0xe7, 0x0f, 0x90, 0x1f, 0x20,
0xfe, 0xf3, 0xfc, 0x39, 0x7b, 0x12, 0x3f, 0x60, 0xf8, 0x93, 0xf7, 0xe7,
0x0f, 0x90, 0x1f, 0x20, 0xff, 0x79, 0xfe, 0x3c, 0x79, 0x92, 0x3f, 0x60,
0xf8, 0x9b, 0xf3, 0xe3, 0xcf, 0x9f, 0x9f, 0x3f, 0xff, 0x79, 0xfe, 0x3c,
0x79, 0x92, 0xff, 0x67, 0x08, 0x08, 0x10, 0xf0, 0x0f, 0x18, 0x18, 0x30,
0xe0, 0x79, 0xfe, 0x00, 0x39, 0x13, 0x10, 0x20, 0x0c, 0x08, 0x10, 0xf0,
0x0f, 0x08, 0x18, 0x30, 0xf0, 0x78, 0xfe, 0x80, 0x3c, 0x19, 0x10, 0x30,
0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x0e, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//---JDJELECTRONICS 2023 --- 128 by 32 pixels
const unsigned char JDJelectronics[] U8X8_PROGMEM = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x7f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x7f, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xc0, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x3f, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x3f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xe0, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x3f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
0x1f, 0x80, 0xfc, 0x80, 0x00, 0x7f, 0x03, 0x7f, 0x7f, 0xff, 0x7e, 0xfe,
0xfc, 0xed, 0xef, 0xcf, 0x0f, 0xc0, 0xc6, 0xc0, 0x80, 0x61, 0x01, 0x61,
0x03, 0x08, 0x02, 0xc6, 0x86, 0x6c, 0x60, 0xc0, 0x0f, 0xc0, 0xc6, 0xc0,
0x80, 0x3f, 0x81, 0x3f, 0x03, 0x0c, 0x03, 0xc2, 0x86, 0x24, 0xe0, 0xe7,
0x7f, 0x40, 0xc2, 0x40, 0x80, 0xbf, 0x81, 0x3f, 0x01, 0x0c, 0x03, 0xc3,
0xc6, 0x34, 0xe0, 0xe7, 0x7f, 0x60, 0x43, 0x60, 0xc0, 0x80, 0x81, 0x80,
0x01, 0x0c, 0x03, 0x43, 0xc2, 0x36, 0x00, 0xe6, 0x7f, 0x7f, 0x7f, 0x7f,
0xc0, 0x9f, 0x9f, 0xbf, 0x1f, 0x04, 0x03, 0x7f, 0x43, 0xf6, 0xf3, 0xf7,
0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };

 

void drawJDJ_small32()
{
   u8g2.firstPage();
   do {
   u8g2.drawXBMP(0, 0,  32, 32, JDJ_32);
  // u8g2.setFont(u8g2_font_haxrcorp4089_tr);
  // u8g2.drawStr( 40, 15,"Oh Snap!");
  // u8g2.drawStr( 40, 25,"you're in the way.");
    } while ( u8g2.nextPage() );
    
}//drawJDJ_small

void drawJDJ_small64()
{
   u8g2.firstPage();
   do {
   u8g2.drawXBMP(0, 0,  64, 64, JDJ_64);
  // u8g2.setFont(u8g2_font_haxrcorp4089_tr);
  // u8g2.drawStr( 40, 15,"Oh Snap!");
  // u8g2.drawStr( 40, 25,"you're in the way.");
    } while ( u8g2.nextPage() );
    
}//drawJDJ_small

void drawJDJelectronics_Inverted()
{
   u8g2.firstPage();
   do {
   u8g2.drawXBMP(0, 0,  128, 24, JDJelectronics_Inverted);
  // u8g2.setFont(u8g2_font_haxrcorp4089_tr);
  // u8g2.drawStr( 40, 15,"Oh Snap!");
  // u8g2.drawStr( 40, 25,"you're in the way.");
    } while ( u8g2.nextPage() );
    
}//drawJDJelectronics

void drawJDJelectronics()
{
   u8g2.firstPage();
   do {
   u8g2.drawXBMP(0, 0,  128, 32, JDJelectronics);
  // u8g2.setFont(u8g2_font_haxrcorp4089_tr);
  // u8g2.drawStr( 40, 15,"Oh Snap!");
  // u8g2.drawStr( 40, 25,"you're in the way.");
    } while ( u8g2.nextPage() );
    
}//drawJDJelectronics

void setup(void) {

  u8g2.begin();  
}

void loop(void) {
  
drawJDJelectronics();
delay(2000);
drawJDJ_small32();
delay(2000);

}
 


/***************************************************************************
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to permit
* persons to whom the Software is furnished to do so, subject to the
* following conditions:
*
* The above copyright notice and this permission notice shall be included
* in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
* OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
* THE USE OR OTHER DEALINGS IN THE SOFTWARE.
* 
****************************************************************************
*/
